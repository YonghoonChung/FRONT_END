include 
    현재 파일에 다흔 파일의 내용을 그대로 삽입
    include "파일명";

문자열 함수
    strlen(문자열)        
        전달받은 문자열의 길이를 변환
        
    strcmp(문자열1, 문자열2)        
        전달받은 문자열을 서로 비교, 첫번째 문자열이 크면 양수, 작으면 음수를 반환, 같으면 0을 반환

    strstr(문자열, 찾을문자열)        
        해당 문자열에서 전달 받은 문자열과 처음으로 일치하는 부분을 찾음 찾았으면 그 문자열을 반환

    strpos(문자열, 찾을문자열)       
        해당 문자열에서 전달받은 문자열과 처음으로 일치하는 인덱스를 반환

    substr(문자열, 시작인덱스, 길이)
        해당 문자열에서 특정 인덱스부터 전달받은 길이만큼의 일부분을 추출

    explode(기준문자열, 문자열)
        특정 문자을 기준으로 전달받은 문자열을 나누어서 배열로 변환

    str_replace(기존문자열, 대체문자열, 문자열)
        해당 문자열에서 전달받은 문자열을 모두 찾은 후에 대체 문자열로 대체

쿠키(Cookie)
    웹 사이트에 접속할 때 서버에 의해 사용자의 컴퓨터에 저장되는 정보를 의미
    클라이언트  측의 컴퓨터(브라우저)에 데이터를 넘겨 필요할 때마다 사용
    데이터 형태는 key와 value로 구성
    4kB 이상 저장할 수 없음
    문자열로만 이루어져 있음
    서버당 1개의 저장소를 사용

    쿠키 생성
        setcookie(쿠키이름, 값, 만료시간, 저장위치, 도메인정보, 프로토콜)

    쿠키 사용
        $_COOKIE[쿠키이름]

    쿠키 수정
        setcookie로 같은 name(key값)에 새로운 값을 세팅해 주면 수정이 일어난다

    쿠키 삭제
        쿠키 만료시간을 0 또는 과거시간으로 변경해주면 자동으로 삭제된다.

    time()
        현재 날짜, 시간을 가져오는 함수

    isset()
        데이터가 존재하는지 여부를 확인하는 함수

세션(session)
    서버측 저장
    웹 사이트의 여러 페이지에 걸쳐 사용되는 사용자 정보를 저장하는 곳
    서비스가 돌아가는 서버측에 데이터를 저장
    키와 값으로 저장되는 형태
    키 값만을 클라이언트 측으로 남겨둠
    사용자가 브라우저를 닫아 서버와의 연결을 완전히 끝내는 시점까지가 만료시간
    브라우저는 필요할 때마다 키값을 이용해서 서버에 저장된 데이터를 사용

    php 세션 이용
        php 파일 제일 상단 session_start(); 를 명시

    세션 변수를 만드는 방법
        $_SESSION['존재하지 않던 키'] = 값;

    세션 변수를 수정하는 방법
        $_SESSION['존재하던 키'] = 새로운 값;
    
    세션 변수를 지우는 방법
        unset($_SESSION['존재하는 키']);

        모든 세션을 지울때에는 session_unset();

    세션 지속시간 설정
        php.ini 파일
            session.gc_maxlifetime = 지속시간(초 단위);
            ex) session.gc_maxlifetime = 1440; --> 24분

PHP 파일 다루기
    readfile()
        파일에서 데이터를 한 줄로 읽어오는 함수
        echo 함수를 사용할 필요가 없으며, 텍스트를 표시할 위치에 사용하면 읽어온 내용을 그대로 출력
    
    file()
        매개변수에 지정된 파일을 읽어 한줄씩 나누어서 배열에 저장

    파일 처리중 예외처리(오류 처리)
        @를 붙이면 실행시 에러가 나더라도 스크립트를 중단하지 않으며, 화면에 에러를 발생시키지 않음
        @문장 이후에 or를 이용해서 에러 발생시 처리할 문장을 작성해준다.

        $변수 = @file(파일경로) or 실패시 처리문장;

    fopen()
        file() 함수보다 유연한 코드를 작성하기 위함 함수로,
        모드를 설정해서 여러가지 파일에 대한 처리가 가능하다.

        모드(C, Java, Python, PHP)
            a : append(추가 모드)
            w : write(덮어쓰기 모드)
            r : read(읽기 모드)
            
    fgets()
        fopen() 함수로 open한 파일의 데이터를 읽어옴

    fputs()
        fopen() 함수로 open한 파일에 데이터를 저장함

    feof()
        fopen() 함수로 open한 파일에 데이터가 존재하는지 여부를 확인

    fclose()
        fopen() 함수로 open한 파일을 더이상 사용하지 않는다면 파일을 닫음
